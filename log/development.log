  [1m[35m (2.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (17.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (3.6ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (2.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (28.4ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (269.1ms)[0m  [1m[35mCREATE DATABASE "be_in_touch" ENCODING = 'unicode'[0m
  [1m[35m (2.7ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (13.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (12.6ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (9.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.7ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (114.4ms)[0m  [1m[35mCREATE DATABASE "be_in_touch_test" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.6ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.8ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.1ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.3ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'development', '2024-06-15 12:26:42.201736', '2024-06-15 12:26:42.201738') RETURNING "key"[0m
Migrating to CreateActiveStorageTables (20240615120037)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "service_name" character varying NOT NULL, "byte_size" bigint NOT NULL, "checksum" character varying, "created_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_blobs_on_key" ON "active_storage_blobs" ("key")[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_c3b3935057"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE INDEX "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments" ("blob_id")[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_attachments_uniqueness" ON "active_storage_attachments" ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "active_storage_variant_records" ("id" bigserial primary key, "blob_id" bigint NOT NULL, "variation_digest" character varying NOT NULL, CONSTRAINT "fk_rails_993965df05"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_variant_records_uniqueness" ON "active_storage_variant_records" ("blob_id", "variation_digest")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615120037') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePeople (20240615120615)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "people" ("id" bigserial primary key, "first_name" character varying, "last_name" character varying, "latitude" float, "longitude" float, "bio" text, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615120615') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateRelations (20240615120838)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "relations" ("id" bigserial primary key, "name" character varying)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615120838') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePals (20240615121834)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "pals" ("id" bigserial primary key, "friender_id" bigint NOT NULL, "friendee_id" bigint NOT NULL, "relation_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE INDEX "index_pals_on_friender_id" ON "pals" ("friender_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE INDEX "index_pals_on_friendee_id" ON "pals" ("friendee_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE INDEX "index_pals_on_relation_id" ON "pals" ("relation_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615121834') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePassions (20240615122039)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "passions" ("id" bigserial primary key, "name" character varying, "created_by_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_ac8e4244dd"
FOREIGN KEY ("created_by_id")
  REFERENCES "created_bies" ("id")
)[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(1119024299801210775)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (78.6ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.5ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.0ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (27.2ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
Migrating to CreatePassions (20240615122039)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "passions" ("id" bigserial primary key, "name" character varying, "created_by_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_passions_on_created_by_id" ON "passions" ("created_by_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122039') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePalPassions (20240615122204)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "pal_passions" ("id" bigserial primary key, "pal_id" bigint NOT NULL, "passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_833445c5fe"
FOREIGN KEY ("pal_id")
  REFERENCES "pals" ("id")
, CONSTRAINT "fk_rails_1482dc233c"
FOREIGN KEY ("passion_id")
  REFERENCES "passions" ("id")
)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_pal_id" ON "pal_passions" ("pal_id")[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_passion_id" ON "pal_passions" ("passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122204') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateEvents (20240615122257)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "events" ("id" bigserial primary key, "name" character varying, "dt" timestamp(6), "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122257') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateInteractions (20240615122318)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "interactions" ("id" bigserial primary key, "event_id" bigint NOT NULL, "pal_passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_abb7f4f369"
FOREIGN KEY ("event_id")
  REFERENCES "events" ("id")
, CONSTRAINT "fk_rails_6f9090aecd"
FOREIGN KEY ("pal_passion_id")
  REFERENCES "pal_passions" ("id")
)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_event_id" ON "interactions" ("event_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_pal_passion_id" ON "interactions" ("pal_passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122318') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOccasions (20240615122405)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "occasions" ("id" bigserial primary key, "name" character varying, "dt" date, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122405') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePersonOccasions (20240615122432)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "person_occasions" ("id" bigserial primary key, "person_id" bigint NOT NULL, "occasion_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_dcb40289fc"
FOREIGN KEY ("person_id")
  REFERENCES "people" ("id")
, CONSTRAINT "fk_rails_222ab5af96"
FOREIGN KEY ("occasion_id")
  REFERENCES "occasions" ("id")
)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_person_id" ON "person_occasions" ("person_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_occasion_id" ON "person_occasions" ("occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122432') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateReminders (20240615122553)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "reminders" ("id" bigserial primary key, "person_id" bigint NOT NULL, "person_occasion_id" bigint NOT NULL, "remind_day_offset" integer, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_6ff5f5973f"
FOREIGN KEY ("person_id")
  REFERENCES "people" ("id")
, CONSTRAINT "fk_rails_eaa36b6e77"
FOREIGN KEY ("person_occasion_id")
  REFERENCES "person_occasions" ("id")
)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_id" ON "reminders" ("person_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_occasion_id" ON "reminders" ("person_occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615122553') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (149.7ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (5.0ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (25.3ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (2.1ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (150.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.4ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (4.7ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (24.0ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (0.7ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (149.1ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (4.7ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (11.4ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (0.6ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (135.6ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (5.3ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (0.9ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (141.5ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (4.8ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (2.0ms)[0m  [1m[32mINSERT INTO schema_migrations (version) VALUES ('20240615131900'), ('20240615132000'), ('20240615132100'), ('20240615132200'), ('20240615132300'), ('20240615132400'), ('20240615132500'), ('20240615132600'), ('20240615132700'), ('20240615132800'), ('20240615132900'), ('20240615133000'), ('20240615133100')[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (150.2ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.4ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (4.8ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.2ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.6ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (12.1ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (69.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "be_in_touch"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.4ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (13.1ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (54.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "be_in_touch_test"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.6ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.6ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (15.3ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (166.7ms)[0m  [1m[35mCREATE DATABASE "be_in_touch" ENCODING = 'unicode'[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.5ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.3ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.5ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (10.9ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (103.6ms)[0m  [1m[35mCREATE DATABASE "be_in_touch_test" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.4ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (31.6ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.7ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (24.0ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (20.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.9ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (19.1ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (14.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (1.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'development', '2024-06-15 12:34:48.645386', '2024-06-15 12:34:48.645388') RETURNING "key"[0m
Migrating to CreateActiveStorageTables (20240615120037)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (11.0ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "service_name" character varying NOT NULL, "byte_size" bigint NOT NULL, "checksum" character varying, "created_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_blobs_on_key" ON "active_storage_blobs" ("key")[0m
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_c3b3935057"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments" ("blob_id")[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_attachments_uniqueness" ON "active_storage_attachments" ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "active_storage_variant_records" ("id" bigserial primary key, "blob_id" bigint NOT NULL, "variation_digest" character varying NOT NULL, CONSTRAINT "fk_rails_993965df05"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_variant_records_uniqueness" ON "active_storage_variant_records" ("blob_id", "variation_digest")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615120037') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateEvent (20240615132000)
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "events" ("id" bigserial primary key, "name" character varying, "dt" timestamp, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132000') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOccasion (20240615132100)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "occasions" ("id" bigserial primary key, "name" character varying, "dt" date, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132100') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePal (20240615132200)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "pals" ("id" bigserial primary key, "friender_id" bigint NOT NULL, "friendee_id" bigint NOT NULL, "relation_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132200') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePerson (20240615132300)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "people" ("id" bigserial primary key, "first_name" character varying, "last_name" character varying, "latitude" float, "longitude" float, "bio" text, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132300') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateRelation (20240615132400)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "relations" ("id" bigserial primary key, "name" character varying)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132400') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePassion (20240615132700)
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "passions" ("id" bigserial primary key, "name" character varying, "created_by_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_ac8e4244dd"
FOREIGN KEY ("created_by_id")
  REFERENCES "people" ("id")
)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_passions_on_created_by_id" ON "passions" ("created_by_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132700') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePersonxoccasion (20240615132800)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "person_occasions" ("id" bigserial primary key, "person_id" bigint NOT NULL, "occasion_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_person_id" ON "person_occasions" ("person_id")[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_occasion_id" ON "person_occasions" ("occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132800') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePalxpassion (20240615132900)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "pal_passions" ("id" bigserial primary key, "pal_id" bigint NOT NULL, "passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_pal_id" ON "pal_passions" ("pal_id")[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_passion_id" ON "pal_passions" ("passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132900') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateReminder (20240615133000)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "reminders" ("id" bigserial primary key, "person_id" bigint NOT NULL, "person_occasion_id" bigint NOT NULL, "remind_day_offset" integer, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_id" ON "reminders" ("person_id")[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_occasion_id" ON "reminders" ("person_occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615133000') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateInteraction (20240615133100)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "interactions" ("id" bigserial primary key, "event_id" bigint NOT NULL, "pal_passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_event_id" ON "interactions" ("event_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_pal_passion_id" ON "interactions" ("pal_passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615133100') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT pg_advisory_unlock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (144.5ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (2.5ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.8ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (0.7ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (163.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (2.9ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (28.8ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (9.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (14.8ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (76.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "be_in_touch"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (6.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (43.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "be_in_touch_test"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (14.8ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (211.8ms)[0m  [1m[35mCREATE DATABASE "be_in_touch" ENCODING = 'unicode'[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (9.0ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.5ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (26.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (14.0ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (114.1ms)[0m  [1m[35mCREATE DATABASE "be_in_touch_test" ENCODING = 'unicode'[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (7.9ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.5ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (12.7ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  [1m[35m (8.1ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  [1m[35m (11.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (19.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.5ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.0ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (36.3ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (17.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.9ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (1.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'development', '2024-06-15 12:36:45.629794', '2024-06-15 12:36:45.629796') RETURNING "key"[0m
Migrating to CreateActiveStorageTables (20240615120037)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (12.0ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "service_name" character varying NOT NULL, "byte_size" bigint NOT NULL, "checksum" character varying, "created_at" timestamp(6) NOT NULL)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_blobs_on_key" ON "active_storage_blobs" ("key")[0m
  [1m[35m (7.2ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_c3b3935057"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments" ("blob_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_attachments_uniqueness" ON "active_storage_attachments" ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "active_storage_variant_records" ("id" bigserial primary key, "blob_id" bigint NOT NULL, "variation_digest" character varying NOT NULL, CONSTRAINT "fk_rails_993965df05"
FOREIGN KEY ("blob_id")
  REFERENCES "active_storage_blobs" ("id")
)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_active_storage_variant_records_uniqueness" ON "active_storage_variant_records" ("blob_id", "variation_digest")[0m
  [1m[36mActiveRecord::SchemaMigration Create (11.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615120037') RETURNING "version"[0m
  [1m[36mTRANSACTION (3.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateEvent (20240615132000)
  [1m[36mTRANSACTION (1.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "events" ("id" bigserial primary key, "name" character varying, "dt" timestamp, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132000') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOccasion (20240615132100)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "occasions" ("id" bigserial primary key, "name" character varying, "dt" date, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132100') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePerson (20240615132130)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "people" ("id" bigserial primary key, "first_name" character varying, "last_name" character varying, "latitude" float, "longitude" float, "bio" text, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132130') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePal (20240615132200)
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "pals" ("id" bigserial primary key, "friender_id" bigint, "friendee_id" bigint, "relation_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_b5e1121449"
FOREIGN KEY ("friender_id")
  REFERENCES "people" ("id")
, CONSTRAINT "fk_rails_90a01c9b98"
FOREIGN KEY ("friendee_id")
  REFERENCES "people" ("id")
)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE INDEX "index_pals_on_friender_id" ON "pals" ("friender_id")[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE INDEX "index_pals_on_friendee_id" ON "pals" ("friendee_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132200') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateRelation (20240615132400)
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "relations" ("id" bigserial primary key, "name" character varying)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132400') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePassion (20240615132700)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "passions" ("id" bigserial primary key, "name" character varying, "created_by_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL, CONSTRAINT "fk_rails_ac8e4244dd"
FOREIGN KEY ("created_by_id")
  REFERENCES "people" ("id")
)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE INDEX "index_passions_on_created_by_id" ON "passions" ("created_by_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132700') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePersonxoccasion (20240615132800)
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "person_occasions" ("id" bigserial primary key, "person_id" bigint NOT NULL, "occasion_id" bigint NOT NULL, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_person_id" ON "person_occasions" ("person_id")[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE INDEX "index_person_occasions_on_occasion_id" ON "person_occasions" ("occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132800') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreatePalxpassion (20240615132900)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.5ms)[0m  [1m[35mCREATE TABLE "pal_passions" ("id" bigserial primary key, "pal_id" bigint NOT NULL, "passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_pal_id" ON "pal_passions" ("pal_id")[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE INDEX "index_pal_passions_on_passion_id" ON "pal_passions" ("passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615132900') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateReminder (20240615133000)
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "reminders" ("id" bigserial primary key, "person_id" bigint NOT NULL, "person_occasion_id" bigint NOT NULL, "remind_day_offset" integer, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_id" ON "reminders" ("person_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE INDEX "index_reminders_on_person_occasion_id" ON "reminders" ("person_occasion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615133000') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateInteraction (20240615133100)
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "interactions" ("id" bigserial primary key, "event_id" bigint NOT NULL, "pal_passion_id" bigint NOT NULL, "notes" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_event_id" ON "interactions" ("event_id")[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE INDEX "index_interactions_on_pal_passion_id" ON "interactions" ("pal_passion_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240615133100') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT pg_advisory_unlock(1119024299801210775)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT nspname AS table_schema, MAX(oid) AS dt FROM pg_namespace GROUP BY 1 ORDER BY 1;[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (149.3ms)[0m  [1m[34mSELECT t.table_schema AS "schema", t.table_name AS relation_name, t.table_type,
        pg_catalog.obj_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, 'pg_class'
        ) AS table_description,
        pg_catalog.col_description(
          ('"' || t.table_schema || '"."' || t.table_name || '"')::regclass::oid, c.ordinal_position
        ) AS column_description,
        c.column_name, CASE c.data_type WHEN 'USER-DEFINED' THEN pg_t.typname ELSE c.data_type END AS data_type,
        COALESCE(c.character_maximum_length, c.numeric_precision) AS max_length,
        kcu.constraint_type AS const, kcu.constraint_name AS "key",
        c.is_nullable
      FROM INFORMATION_SCHEMA.tables AS t
        LEFT OUTER JOIN INFORMATION_SCHEMA.columns AS c ON t.table_schema = c.table_schema
          AND t.table_name = c.table_name
          LEFT OUTER JOIN
          (SELECT kcu1.constraint_schema, kcu1.table_name, kcu1.column_name, kcu1.ordinal_position,
          tc.constraint_type, kcu1.constraint_name
          FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu1
          INNER JOIN INFORMATION_SCHEMA.table_constraints AS tc
            ON kcu1.CONSTRAINT_SCHEMA = tc.CONSTRAINT_SCHEMA
            AND kcu1.TABLE_NAME = tc.TABLE_NAME
            AND kcu1.CONSTRAINT_NAME = tc.constraint_name
            AND tc.constraint_type != 'FOREIGN KEY' -- For MSSQL
          ) AS kcu ON
          -- kcu.CONSTRAINT_CATALOG = t.table_catalog AND
          kcu.CONSTRAINT_SCHEMA = c.table_schema
          AND kcu.TABLE_NAME = c.table_name
          AND kcu.column_name = c.column_name
      --    AND kcu.position_in_unique_constraint IS NULL
        INNER JOIN pg_catalog.pg_namespace pg_n ON pg_n.nspname = t.table_schema
        INNER JOIN pg_catalog.pg_class pg_c ON pg_n.oid = pg_c.relnamespace AND pg_c.relname = c.table_name
        INNER JOIN pg_catalog.pg_attribute pg_a ON pg_c.oid = pg_a.attrelid AND pg_a.attname = c.column_name
        INNER JOIN pg_catalog.pg_type pg_t ON pg_t.oid = pg_a.atttypid
      WHERE t.table_schema NOT IN ('information_schema', 'pg_catalog', 'pg_toast', 'heroku_ext',
                   'INFORMATION_SCHEMA', 'sys')
    --          AND t.table_type IN ('VIEW') -- 'BASE TABLE', 'FOREIGN TABLE'
        AND t.table_name NOT IN ('pg_stat_statements', 'schema_migrations', 'ar_internal_metadata')
      ORDER BY 1, t.table_type DESC, 2, c.ordinal_position[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (1.3ms)[0m  [1m[34mSELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, ORDINAL_POSITION,
                        TABLE_NAME, COLUMN_NAME
                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (3.4ms)[0m  [1m[34mSELECT kcu.CONSTRAINT_SCHEMA, kcu.TABLE_NAME, kcu.COLUMN_NAME,
              NULL as primary_schema, NULL as primary_table,
              kcu.CONSTRAINT_NAME AS CONSTRAINT_SCHEMA_FK,
              rc.UNIQUE_CONSTRAINT_NAME, rc.UNIQUE_CONSTRAINT_SCHEMA, rc.UNIQUE_CONSTRAINT_CATALOG, kcu.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rc
              INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kcu
                ON kcu.CONSTRAINT_CATALOG = rc.CONSTRAINT_CATALOG
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
                AND kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME[0m
  ↳ config/environment.rb:5:in `<main>'
  [1m[35m (12.5ms)[0m  [1m[35m-- inherited and partitioned tables counts
        SELECT n.nspname, parent.relname,
          ((SUM(child.reltuples::float) / greatest(SUM(child.relpages), 1))) *
          (SUM(pg_relation_size(child.oid))::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_inherits
          INNER JOIN pg_class parent ON pg_inherits.inhparent = parent.oid
          INNER JOIN pg_class child ON pg_inherits.inhrelid = child.oid
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = parent.relnamespace
        GROUP BY n.nspname, parent.relname, child.reltuples, child.relpages, child.oid

        UNION ALL

        -- table count
        SELECT n.nspname, pg_class.relname,
          (pg_class.reltuples::float / greatest(pg_class.relpages, 1)) *
            (pg_relation_size(pg_class.oid)::float / (current_setting('block_size')::float))::integer AS rowcount
        FROM pg_class
          INNER JOIN pg_catalog.pg_namespace n ON n.oid = pg_class.relnamespace
        GROUP BY n.nspname, pg_class.relname, pg_class.reltuples, pg_class.relpages, pg_class.oid[0m
  ↳ config/environment.rb:5:in `<main>'
